import 'dotenv/config';
import { Telegraf } from "telegraf";

const bot = new Telegraf(process.env.BOT_TOKEN);

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ–±—Ö—É–∫–∞
bot.telegram.setWebhook(process.env.WEBHOOK_URL);

// –õ–æ–≥–∏–∫–∞ –ø—Ä–∏ /start
bot.start((ctx) => {
    let user = ''

    const firstName = ctx.from.first_name || "";
    const lastName = ctx.from.last_name || "";
    const fullName = `${firstName} ${lastName}`.trim();

    if (ctx.from.username) {
        // –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–∏–∫, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
        user = `${fullName} (@${ctx.from.username})`;
    } else {
        // –ï—Å–ª–∏ –Ω–∏–∫–∞ –Ω–µ—Ç ‚Äî –¥–µ–ª–∞–µ–º –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –ø–æ ID
        user = `${fullName} (tg://user?id=${ctx.from.id})`;
    }
    // —á–∏—Ç–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä start
    const args = ctx.startPayload; // "mastermind" –∏–ª–∏ "coaching"

    let clientMsg = "‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!";
    let adminMsg = `üì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç: ${user}`;

    if (args === "mastermind") {
        clientMsg = "‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –º–∞—Å—Ç–µ—Ä–º–∞–π–Ω–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!";
        adminMsg = `üì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –ú–ê–°–¢–ï–†–ú–ê–ô–ù–î\n–û—Ç: ${user}`;
    } else if (args === "coaching") {
        clientMsg = "‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –∫–æ—É—á-—Å–µ—Å—Å–∏—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!";
        adminMsg = `üì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –ö–û–£–ß-–°–ï–°–°–ò–Æ\n–û—Ç: ${user}`;
    }

    // —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—É
    ctx.reply(clientMsg);
    // —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
    bot.telegram.sendMessage(process.env.ADMIN_ID, adminMsg);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–µ–±—Ö—É–∫–∞ –¥–ª—è Express / Vercel
export default async function handler(req, res) {
    try {
        // console.log("Received webhook update:", req.body);

        if (req.method !== "POST") {
            return res.status(200).json({ ok: true });
        }

        // –ø–µ—Ä–µ–¥–∞—ë–º –∞–ø–¥–µ–π—Ç –≤ Telegraf
        await bot.handleUpdate(req.body);

        // –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º 200 –û–ö, —á—Ç–æ–±—ã Telegram –Ω–µ —Å–ª–∞–ª retry
        return res.status(200).json({ ok: true });
    } catch (err) {
        console.error("Error processing update:", err);
        return res.status(500).json({ ok: false, error: err.message });
    }
}
